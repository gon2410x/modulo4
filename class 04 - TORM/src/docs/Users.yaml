paths:
  /api/users/:
    get:
      summary: Obtiene todos los usuarios
      tags:
        - Users
      responses:
        "200":
          description: Los usuarios se obtuvieron exitosamente de la base de datos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#components/schemas/User'
        "500":
          description: Error interno del servidor (query incorrecta o falla de conexion con la base de datos)


/api/users/{userId}:
    get:
      summary: Obtiene un determinado  usuario
      tags:
        - Users
      parameters:
      - name: userId
        in: path
        required: true
        description: id de usuario que se requiere
        schema:
          $type: number
      responses:
        "200":
          description: El usuario se obtuvo exitosamente de la base de datos
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#components/schemas/User'
        "500":
          description: Error interno del servidor (query incorrecta o falla de conexion con la base de datos)

    put:
      summary: Actualiza un determinado usuario
      tags:
        - Users
      parameters:
      - name: userId
        in: path
        required: true
        description: id de usuario que se requiere
        schema:
          $type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#components/requestBodies/updateUser'
      responses:
        "200":
          description: El usuario se actualizo exitosamente de la base de datos
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#components/schemas/User'
        "500":
          description: Error interno del servidor (query incorrecta o falla de conexion con la base de datos)

components:
  schemas:
    User:
      type: object
      properties:
        id: 
          type: number
          description: Id autogenerado por la base de datos
        email:
          type: string
        password: 
          type: string
        active:
          type: boolean
        createdAt: 
          type: Date
        updatedAt: 
          type: Date
        profile:
          type: Profile
        photos: 
          type: Photo[]
      example:
        id: 1
        email: jorge@gmail.com
        password: 1234
        active: true
        createdAt: '2023-02-02'
        updatedAt: '2023-02-02'
        profile: {}
        photos: []

  requestBodies:
    updateUser:
      type: object
      properties:  
        email:
          type: string
          description: Email del usuario
        password:
          type: string
          description: Password del usuario  
      example:
        email: jorge@gmail.com
        password: 12345